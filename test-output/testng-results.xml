<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="8" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-02T07:25:14Z" name="Default suite" finished-at="2022-05-02T07:25:15Z" duration-ms="1131">
    <groups>
    </groups>
    <test started-at="2022-05-02T07:25:14Z" name="Default test" finished-at="2022-05-02T07:25:15Z" duration-ms="1131">
      <class name="com.qa.test.PasswordPolicyTest">
        <test-method signature="updateValidationPasswordPolicy(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.PasswordPolicyTest@9a20cbd]" started-at="2022-05-02T07:25:14Z" name="updateValidationPasswordPolicy" data-provider="updateValidationPasswordPolicy" finished-at="2022-05-02T07:25:15Z" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Minimum Required Password Policy Length is 2 and Maximum is 250]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValidationPasswordPolicy -->
        <test-method signature="updateValidationPasswordPolicy(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.PasswordPolicyTest@9a20cbd]" started-at="2022-05-02T07:25:15Z" name="updateValidationPasswordPolicy" data-provider="updateValidationPasswordPolicy" finished-at="2022-05-02T07:25:15Z" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AT_PasswordpolicyupdatevalidationAT_PasswordpolicyupdatevalidationAT_PasswordpolicyupdatevalidationAT_PasswordpolicyupdatevalidationAT_PasswordpolicyupdatevalidationAT_PasswordpolicyupdatevalidationAT_PasswordpolicyupdatevalidationAT_PasswordpolicyupdatevalidationAT_Passwordpolicyupdatevalidation]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Minimum Required Password Policy Length is 2 and Maximum is 250]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValidationPasswordPolicy -->
        <test-method signature="updateValidationPasswordPolicy(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.PasswordPolicyTest@9a20cbd]" started-at="2022-05-02T07:25:15Z" name="updateValidationPasswordPolicy" data-provider="updateValidationPasswordPolicy" finished-at="2022-05-02T07:25:15Z" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AT_PasswordPolicy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Password Policy Name Already Exists]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValidationPasswordPolicy -->
        <test-method signature="updateValidationPasswordPolicy(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.test.PasswordPolicyTest@9a20cbd]" started-at="2022-05-02T07:25:15Z" name="updateValidationPasswordPolicy" data-provider="updateValidationPasswordPolicy" finished-at="2022-05-02T07:25:15Z" duration-ms="241" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Please Enter Password Policy Name]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path data.updatePasswordPolicy.message doesn't match.
Expected: a string equal to "Please Enter Password Policy Name" ignoring case
  Actual: Minimum Required Password Policy Length is 2 and Maximum is 250
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path data.updatePasswordPolicy.message doesn't match.
Expected: a string equal to "Please Enter Password Policy Name" ignoring case
  Actual: Minimum Required Password Policy Length is 2 and Maximum is 250

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.qa.test.PasswordPolicyTest.updateValidationPasswordPolicy(PasswordPolicyTest.java:248)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValidationPasswordPolicy -->
      </class> <!-- com.qa.test.PasswordPolicyTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
